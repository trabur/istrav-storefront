import './Account.svelte.css.proxy.js';
/* src/components/Auth/Account.svelte generated by Svelte v3.32.1 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_style,
	space,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

import { onMount } from "../../_snowpack/pkg/svelte.js";

function create_fragment(ctx) {
	let div6;
	let div0;
	let t0;
	let div5;
	let ul;
	let li0;
	let a0;
	let t1;
	let t2;
	let li1;
	let a1;
	let t3;
	let t4;
	let li2;
	let a2;
	let t5;
	let t6;
	let div2;
	let div1;
	let p;
	let t7;
	let t8;
	let hr;
	let t9;
	let a3;
	let t10;
	let t11;
	let div3;
	let t12;
	let div4;

	return {
		c() {
			div6 = element("div");
			div0 = element("div");
			t0 = space();
			div5 = element("div");
			ul = element("ul");
			li0 = element("li");
			a0 = element("a");
			t1 = text("Account");
			t2 = space();
			li1 = element("li");
			a1 = element("a");
			t3 = text("Order history");
			t4 = space();
			li2 = element("li");
			a2 = element("a");
			t5 = text("Address book");
			t6 = space();
			div2 = element("div");
			div1 = element("div");
			p = element("p");
			t7 = text("I am a very simple card. I am good at containing small bits of information.\n        I am convenient because I require little markup to use effectively.");
			t8 = space();
			hr = element("hr");
			t9 = space();
			a3 = element("a");
			t10 = text("LOGOUT");
			t11 = space();
			div3 = element("div");
			t12 = space();
			div4 = element("div");
			this.h();
		},
		l(nodes) {
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div0 = claim_element(div6_nodes, "DIV", { class: true });
			children(div0).forEach(detach);
			t0 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			ul = claim_element(div5_nodes, "UL", { class: true, id: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			a0 = claim_element(li0_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t1 = claim_text(a0_nodes, "Account");
			a0_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t2 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			a1 = claim_element(li1_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t3 = claim_text(a1_nodes, "Order history");
			a1_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t4 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			a2 = claim_element(li2_nodes, "A", { href: true });
			var a2_nodes = children(a2);
			t5 = claim_text(a2_nodes, "Address book");
			a2_nodes.forEach(detach);
			li2_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			t6 = claim_space(div5_nodes);
			div2 = claim_element(div5_nodes, "DIV", { class: true, id: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p = claim_element(div1_nodes, "P", {});
			var p_nodes = children(p);
			t7 = claim_text(p_nodes, "I am a very simple card. I am good at containing small bits of information.\n        I am convenient because I require little markup to use effectively.");
			p_nodes.forEach(detach);
			t8 = claim_space(div1_nodes);
			hr = claim_element(div1_nodes, "HR", {});
			t9 = claim_space(div1_nodes);
			a3 = claim_element(div1_nodes, "A", { href: true, class: true, style: true });
			var a3_nodes = children(a3);
			t10 = claim_text(a3_nodes, "LOGOUT");
			a3_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			t11 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true, id: true });
			var div3_nodes = children(div3);
			div3_nodes.forEach(detach);
			t12 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true, id: true });
			var div4_nodes = children(div4);
			div4_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			div6_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "col s0 m1");
			attr(a0, "href", "#account");
			attr(li0, "class", "tab col s3");
			attr(a1, "href", "#orderHistory");
			attr(li1, "class", "tab col s3");
			attr(a2, "href", "#addressBook");
			attr(li2, "class", "tab col s3");
			attr(ul, "class", "tabs tabs-fixed-width");
			attr(ul, "id", "accountTabs");
			attr(a3, "href", "/logout");
			attr(a3, "class", "waves-effect waves-light red lighten-2 btn-large");
			set_style(a3, "margin-top", "0.5em");
			attr(div1, "class", "card-content");
			attr(div2, "class", "card svelte-1majf1z");
			attr(div2, "id", "account");
			attr(div3, "class", "card svelte-1majf1z");
			attr(div3, "id", "orderHistory");
			attr(div4, "class", "card svelte-1majf1z");
			attr(div4, "id", "addressBook");
			attr(div5, "class", "col s12 m10");
			attr(div6, "class", "row");
		},
		m(target, anchor) {
			insert(target, div6, anchor);
			append(div6, div0);
			append(div6, t0);
			append(div6, div5);
			append(div5, ul);
			append(ul, li0);
			append(li0, a0);
			append(a0, t1);
			append(ul, t2);
			append(ul, li1);
			append(li1, a1);
			append(a1, t3);
			append(ul, t4);
			append(ul, li2);
			append(li2, a2);
			append(a2, t5);
			append(div5, t6);
			append(div5, div2);
			append(div2, div1);
			append(div1, p);
			append(p, t7);
			append(div1, t8);
			append(div1, hr);
			append(div1, t9);
			append(div1, a3);
			append(a3, t10);
			append(div5, t11);
			append(div5, div3);
			append(div5, t12);
			append(div5, div4);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div6);
		}
	};
}

function instance($$self) {
	onMount(() => {
		var elemAccountTabs = document.querySelector("#accountTabs");
		var instanceAccountTabs = M.Tabs.init(elemAccountTabs, {});
	});

	return [];
}

class Account extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Account;
//# sourceMappingURL=Account.svelte.js.map
