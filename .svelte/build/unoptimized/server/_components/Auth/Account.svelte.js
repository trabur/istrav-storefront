import './Account.svelte.css.proxy.js';
/* src/components/Auth/Account.svelte generated by Svelte v3.32.1 */
import { create_ssr_component } from "../../_snowpack/pkg/svelte/internal.js";

import { onMount } from "../../_snowpack/pkg/svelte.js";

const css = {
	code: ".card.svelte-1majf1z{background:#eee;min-height:400px}",
	map: "{\"version\":3,\"file\":\"Account.svelte\",\"sources\":[\"Account.svelte\"],\"sourcesContent\":[\"<script>\\n  import { onMount } from 'svelte';\\n\\n  onMount(() => {\\n    var elemAccountTabs = document.querySelector('#accountTabs')\\n    var instanceAccountTabs = M.Tabs.init(elemAccountTabs, {})\\n  })\\n</script>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col s0 m1\\\"></div>\\n  <div class=\\\"col s12 m10\\\">\\n    <ul class=\\\"tabs tabs-fixed-width\\\" id=\\\"accountTabs\\\">\\n      <li class=\\\"tab col s3\\\"><a href=\\\"#account\\\">Account</a></li>\\n      <li class=\\\"tab col s3\\\"><a href=\\\"#orderHistory\\\">Order history</a></li>\\n      <li class=\\\"tab col s3\\\"><a href=\\\"#addressBook\\\">Address book</a></li>\\n    </ul>\\n    <div class=\\\"card\\\" id=\\\"account\\\">\\n      <div class=\\\"card-content\\\">\\n        <p>I am a very simple card. I am good at containing small bits of information.\\n        I am convenient because I require little markup to use effectively.</p>\\n        <hr>\\n        <a href=\\\"/logout\\\" class=\\\"waves-effect waves-light red lighten-2 btn-large\\\" style=\\\"margin-top: 0.5em;\\\">LOGOUT</a>\\n      </div>\\n      <!-- <div class=\\\"card-action\\\">\\n        <a href=\\\"#\\\">This is a link</a>\\n      </div> -->\\n    </div>\\n    <div class=\\\"card\\\" id=\\\"orderHistory\\\">\\n    </div>\\n    <div class=\\\"card\\\" id=\\\"addressBook\\\">\\n    </div>\\n  </div>\\n</div>\\n\\n<style>\\n.card {\\n  background: #eee;\\n  min-height: 400px;\\n}\\n</style>\"],\"names\":[],\"mappings\":\"AAoCA,KAAK,eAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,KAAK,AACnB,CAAC\"}"
};

const Account = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	onMount(() => {
		var elemAccountTabs = document.querySelector("#accountTabs");
		var instanceAccountTabs = M.Tabs.init(elemAccountTabs, {});
	});

	$$result.css.add(css);

	return `<div class="${"row"}"><div class="${"col s0 m1"}"></div>
  <div class="${"col s12 m10"}"><ul class="${"tabs tabs-fixed-width"}" id="${"accountTabs"}"><li class="${"tab col s3"}"><a href="${"#account"}">Account</a></li>
      <li class="${"tab col s3"}"><a href="${"#orderHistory"}">Order history</a></li>
      <li class="${"tab col s3"}"><a href="${"#addressBook"}">Address book</a></li></ul>
    <div class="${"card svelte-1majf1z"}" id="${"account"}"><div class="${"card-content"}"><p>I am a very simple card. I am good at containing small bits of information.
        I am convenient because I require little markup to use effectively.</p>
        <hr>
        <a href="${"/logout"}" class="${"waves-effect waves-light red lighten-2 btn-large"}" style="${"margin-top: 0.5em;"}">LOGOUT</a></div>
      </div>
    <div class="${"card svelte-1majf1z"}" id="${"orderHistory"}"></div>
    <div class="${"card svelte-1majf1z"}" id="${"addressBook"}"></div></div>
</div>`;
});

export default Account;
//# sourceMappingURL=Account.svelte.js.map
